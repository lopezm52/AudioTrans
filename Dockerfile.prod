# Multi-stage build para reducir tama침o de imagen
FROM python:3.11-slim as builder

# Instalar dependencias de construcci칩n
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app
COPY requirements.txt .
RUN pip install --no-cache-dir --user -r requirements.txt

# Imagen final
FROM python:3.11-slim

# Instalar dependencias del sistema para audio
RUN apt-get update && apt-get install -y \
    ffmpeg \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Crear usuario no-root
RUN useradd --create-home --shell /bin/bash app

# Copiar dependencias instaladas
COPY --from=builder /root/.local /home/app/.local

# Configurar PATH
ENV PATH=/home/app/.local/bin:$PATH
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1

WORKDIR /app

# Copiar c칩digo de la aplicaci칩n
COPY app.py .

# Crear directorio para archivos temporales
RUN mkdir -p /tmp/audiotrans && chown -R app:app /tmp/audiotrans /app

USER app

# Health check
HEALTHCHECK --interval=60s --timeout=30s --start-period=120s --retries=5 \
    CMD curl -f http://localhost:8001/health || exit 1

EXPOSE 8001

CMD ["uvicorn", "app:app", "--host", "0.0.0.0", "--port", "8001"] 